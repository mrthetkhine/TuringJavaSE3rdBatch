/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package jdbc.app;

import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import jdbc.app.service.BusinessRuleException;
import jdbc.app.service.MovieService;
import jdbc.model.Actor;
import jdbc.model.ActorInMovie;
import jdbc.model.Movie;

/**
 *
 * @author thetkhine
 */
public class ActorInMovieFrame extends javax.swing.JFrame {

    List<Actor> actors;
    List<Movie> movies;
    List<ActorInMovie> actorInMovies;
    MovieService movieService;
    /**
     * Creates new form ActorInMovie
     */
    public ActorInMovieFrame() {
        initComponents();
        this.movieService = App.getApp().movieService;
        this.loadAllData();
    }
    public void loadAllData()
    {
        this.actors = App.getApp().movieService.getAllActor();
        this.pouplateActor(this.actors);
        
        this.movies = App.getApp().movieService.getAllMovie();
        this.populateMovie(this.movies);
        
        this.loadActorInMovie();
    }
    private void pouplateActor(List<Actor> actors)
    {
        this.cboActors.removeAllItems();
        actors.forEach((actor) -> {
            this.cboActors.addItem(actor.getName());
        });
        
    }
    private void populateMovie(List<Movie> movies)
    {
        this.cboMovies.removeAllItems();
        movies.forEach((movie)->this.cboMovies.addItem(movie.getTitle()));
    }
    public void loadActorInMovie()
    {
        this.actorInMovies = this.movieService.getAllActorInMovie();
        DefaultTableModel model = (DefaultTableModel)this.tblMovieActor.getModel();
        for(ActorInMovie actorInMovie : this.actorInMovies)
        {
            Object row[] = modelToTableRow(actorInMovie);
            
            model.addRow(row);
        }
    }

    private Object[] modelToTableRow(ActorInMovie actorInMovie) {
        Object row[] = new Object[4];
        row[0] = actorInMovie.getMovie().getId();
        row[1] = actorInMovie.getMovie().getTitle();
        row[2] = actorInMovie.getActor().getId();
        row[3] = actorInMovie.getActor().getName();
        return row;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        cboActors = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        cboMovies = new javax.swing.JComboBox<>();
        btnAssign = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblMovieActor = new javax.swing.JTable();

        jLabel1.setText("Actor");

        jLabel2.setText("Movie");

        btnAssign.setText("Assign");
        btnAssign.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAssignActionPerformed(evt);
            }
        });

        tblMovieActor.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Movie Id", "Movie Title", "Actor Id", "Name"
            }
        ));
        jScrollPane1.setViewportView(tblMovieActor);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 736, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 163, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnAssign)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(cboActors, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(cboMovies, 0, 297, Short.MAX_VALUE)))))
                .addContainerGap(40, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(cboActors, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(cboMovies, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnAssign)
                .addGap(45, 45, 45)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(42, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAssignActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAssignActionPerformed
        try {
            ActorInMovie actorInMovie = getActorInMovieFromInput();
            
            this.movieService.assignActorToMovie(actorInMovie);
            
            DefaultTableModel model = (DefaultTableModel)this.tblMovieActor.getModel();
            Object row[] = modelToTableRow(actorInMovie);
            
            model.addRow(row);
            
        } catch (BusinessRuleException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
        }
    }//GEN-LAST:event_btnAssignActionPerformed

    private ActorInMovie getActorInMovieFromInput() {
        // TODO add your handling code here:
        int movieIndex = this.cboMovies.getSelectedIndex();
        int actorIndex = this.cboActors.getSelectedIndex();
        
        Movie movie = this.movies.get(movieIndex);
        Actor actor = this.actors.get(actorIndex);
        
        System.out.println("Movie "+movie);
        System.out.println("Actor "+actor);
        
        ActorInMovie actorInMovie = new ActorInMovie();
        actorInMovie.setMovie(movie);
        actorInMovie.setActor(actor);
        
        return actorInMovie;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ActorInMovieFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ActorInMovieFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ActorInMovieFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ActorInMovieFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ActorInMovieFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAssign;
    private javax.swing.JComboBox<String> cboActors;
    private javax.swing.JComboBox<String> cboMovies;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblMovieActor;
    // End of variables declaration//GEN-END:variables
}
